name: CI Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SonarQube Scanner
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: -X

  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set Docker tag
        id: docker_tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/${{ github.event.repository.default_branch }}" ]]; then
            echo "::set-output name=tag::latest"
          else
            echo "::set-output name=tag::${{ github.ref_name }}"
          fi

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/${{ github.repository }}:${{ steps.docker_tag.outputs.tag }} .
          docker push ${{ secrets.DOCKER_REGISTRY }}/${{ github.repository }}:${{ steps.docker_tag.outputs.tag }}

      - name: Save Docker tag
        run: echo "DOCKER_TAG=${{ github.repository }}:${{ steps.docker_tag.outputs.tag }}" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Set Kubernetes context
        run: |
          kubectl config use-context ${{ secrets.KUBE_CONTEXT }}

      - name: Deploy to Kubernetes
        run: |
          envsubst < .k8s/deploy.yml | kubectl delete --ignore-not-found=true -f -
          envsubst < .k8s/deploy.yml | kubectl apply -f -
          envsubst < .k8s/service.yml | kubectl apply -f -
          envsubst < .k8s/ingress.yml | kubectl apply -f -

  container_scanning:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Container Scanning
        run: |
          docker scan ${{ secrets.DOCKER_REGISTRY }}/${{ github.repository }}:${{ steps.docker_tag.outputs.tag }}
